name: Build and Deploy Staging Instance

on:
  push:
    branches: [ main, develop ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    if: github.repository == 'openglide/og-id-editor'
    runs-on: ubuntu-latest
    environment: workflows
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      # install and build development version of id-tagging-schema
      - uses: actions/checkout@v4
        with:
          repository: openglide/og-id-tagging-schema
          path: './id-tagging-schema'
      - run: npm clean-install
        working-directory: './id-tagging-schema'
      - run: npm run translations
        working-directory: './id-tagging-schema'
        env:
          transifex_password: ${{secrets.TX_TOKEN}}
        if: env.transifex_password != null
      - run: npm run dist
        working-directory: './id-tagging-schema'
      - run: mkdir dist/id-tagging-schema && mv id-tagging-schema/dist dist/id-tagging-schema/dist
      # build iD using freshest version of presets and ELI
      - run: npm clean-install
      - run: npm install editor-layer-index
      - run: mkdir dist/data
      - run: npm run imagery
      - run: npm run all
      - run: npm run translations
        env:
          transifex_password: ${{secrets.TX_TOKEN}}
        if: env.transifex_password != null
      - run: npm run dist
        env:
          ID_PRESETS_CDN_URL: './id-tagging-schema/'
      - name: Upload dist dir to pages
        uses: actions/upload-pages-artifact@v3
        with:
            path: ./

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


